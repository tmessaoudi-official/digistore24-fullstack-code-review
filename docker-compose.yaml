services:
  # PostgreSQL Database
  db:
    image: postgres:16-alpine
    container_name: chatmessenger_db
    environment:
      POSTGRES_DB: chatmessenger
      POSTGRES_USER: chatmessenger
      POSTGRES_PASSWORD: chatmessenger
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U chatmessenger"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - chatmessenger_network

  # Symfony Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: chatmessenger_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/var/www/html
      - backend_vendor:/var/www/html/vendor
      - backend_var:/var/www/html/var
    environment:
      APP_ENV: dev
      APP_SECRET: 'change-me-in-production'
      DATABASE_URL: 'postgresql://chatmessenger:chatmessenger@db:5432/chatmessenger?serverVersion=16&charset=utf8'
      JWT_SECRET_KEY: '%kernel.project_dir%/config/jwt/private.pem'
      JWT_PUBLIC_KEY: '%kernel.project_dir%/config/jwt/public.pem'
      JWT_PASSPHRASE: 'chatmessenger'
      CORS_ALLOW_ORIGIN: '^http://localhost:4200$'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - chatmessenger_network
    command: >
      sh -c "
        composer install --no-interaction &&
        php bin/console lexik:jwt:generate-keypair --skip-if-exists &&
        php bin/console doctrine:database:create --if-not-exists &&
        php bin/console doctrine:migrations:migrate --no-interaction &&
        php -S 0.0.0.0:8000 -t public/
      "

  # Angular Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: chatmessenger_frontend
    ports:
      - "4200:4200"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      NODE_ENV: development
    depends_on:
      - backend
    networks:
      - chatmessenger_network
    command: npm run start:development -- --host 0.0.0.0 --port 4200

volumes:
  db_data:
    driver: local
  backend_vendor:
    driver: local
  backend_var:
    driver: local
  frontend_node_modules:
    driver: local

networks:
  chatmessenger_network:
    driver: bridge
